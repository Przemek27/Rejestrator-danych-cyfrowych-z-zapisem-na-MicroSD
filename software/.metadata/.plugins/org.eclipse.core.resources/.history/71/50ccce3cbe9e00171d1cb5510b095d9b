/*
 * uart.c
 *
 *  Created on: 31 sie 2017
 *      Author: Przemek
 */

//TODO: uart_manage() - funkcja dzialaj¹ca w nieskoñczonej pêtli wykrywaj¹ca komendy

#include "uart.h"
#include "altera_avalon_uart_regs.h"

void uart_test(alt_u32 base){

	alt_u32 status;
	alt_u32 i;


	do{
		status = IORD_ALTERA_AVALON_UART_STATUS(base);
	} while((status & ALTERA_AVALON_UART_STATUS_TRDY_MSK) == 0);
	//while (!(IORD_ALTERA_AVALON_UART_STATUS(base) & ALTERA_AVALON_UART_STATUS_TRDY_MSK))// check if transmit ready
	IOWR_ALTERA_AVALON_UART_TXDATA(base,0x01);//
	for(i=0;i<1000000;i++){
	}
	do{
		status = IORD_ALTERA_AVALON_UART_STATUS(base);
	} while((status & ALTERA_AVALON_UART_STATUS_TRDY_MSK) == 0);
	IOWR_ALTERA_AVALON_UART_TXDATA(base,0x02);//
	for(i=0;i<1000000;i++){
	}
	do{
	status = IORD_ALTERA_AVALON_UART_STATUS(base);
	} while((status & ALTERA_AVALON_UART_STATUS_TRDY_MSK) == 0);
	IOWR_ALTERA_AVALON_UART_TXDATA(base,0x03);//
	for(i=0;i<1000000;i++){
	}
	do{
	status = IORD_ALTERA_AVALON_UART_STATUS(base);
	} while((status & ALTERA_AVALON_UART_STATUS_TRDY_MSK) == 0);
	IOWR_ALTERA_AVALON_UART_TXDATA(base,0x04);//
	for(i=0;i<1000000;i++){
	}

	if (IORD_ALTERA_AVALON_UART_STATUS(base) & ALTERA_AVALON_UART_STATUS_TRDY_MSK)// check if transmit ready
	IOWR_ALTERA_AVALON_UART_TXDATA(base,0X0D);//	\r
	for(i=0;i<1000000;i++){
	}
	 if (IORD_ALTERA_AVALON_UART_STATUS(base) & ALTERA_AVALON_UART_STATUS_TRDY_MSK)// check if transmit ready
	IOWR_ALTERA_AVALON_UART_TXDATA(base,0x0A);//	\n
	for(i=0;i<1000000;i++){
	}
}

void uart_manage(alt_u8 *acquireData){
	char c;

	c = alt_getchar();

	switch(c){
		case 's': case 'S':
			alt_printf("start\n\r");
			*acquireData = 0xff;
			break;

		case 'p': case 'P':
			alt_printf("stop\n\r");
			*acquireData = 0x00;
			break;

		case 'd': case 'D':				//FIXME: komenda powinna byc aktywna jedynie po udanej akwizycji danych
			alt_printf("dump\n\r");
			//TODO: dump data to PC (or to microSD Card ??)
			break;

		case 'f': case 'F':
			alt_printf("freq\n\r");
			//TODO: change frequency
			break;

		default:
			//do nothing
	}

}
